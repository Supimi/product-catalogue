version: '3.8'

services:

  catalogue-service:
    container_name: catalogue-service
    image: efuture/catalogue-service:latest
    ports:
      - "8081:8081"
    networks:
      - app-network
    depends_on:
      mysqldb:
        condition: service_healthy

  mysqldb:
    container_name: mysqldb
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: pass123
      MYSQL_DATABASE: efuture
    ports:
      - "3306:3306"
    healthcheck:
      test: [ "CMD-SHELL", "mysqladmin ping -h localhost -u root -ppass123" ]
      timeout: 20s
      retries: 10
    networks:
      - app-network
    volumes:
      - ./mysql-init:/docker-entrypoint-initdb.d

#  zookeeper:
#    image: confluentinc/cp-zookeeper:7.4.4
#    container_name: zookeeper
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#    ports:
#      - "22181:2181"
#    networks:
#      - app-network
#
#  kafka:
#    image: confluentinc/cp-kafka:7.4.4
#    container_name: kafka
#    depends_on:
#      - zookeeper
#    ports:
#      - "29092:29092"
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#    networks:
#      - app-network

# Custom network for the services
networks:
  app-network:
    driver: bridge


